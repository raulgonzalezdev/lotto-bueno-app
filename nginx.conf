# Configuracion SSL

# Map the Origin header to the Access-Control-Allow-Origin value
map $http_origin $cors_origin {
    default "";
    "~^https?://(www\.)?applottobueno\.com$" $http_origin;
    "http://localhost:3000" $http_origin;
}

server {
    listen 443 ssl;
    server_name applottobueno.com www.applottobueno.com;

    ssl_certificate /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;

    # Ruta para archivos est√°ticos
    location /_next/ {
        alias /usr/share/nginx/html/static/_next/;
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    location /static/ {
        alias /usr/share/nginx/html/static/;
        expires 30d;
        add_header Cache-Control "public, no-transform";
        try_files $uri $uri/ =404;
    }

    location / {
        proxy_pass http://app:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Handle OPTIONS preflight requests
        if ($request_method = 'OPTIONS') {
            # Check if origin is allowed
             #if ($cors_origin != "") {
                add_header 'Access-Control-Allow-Origin' $cors_origin always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Content-Length' 0;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                return 204;
           # }
            # If origin is not allowed for OPTIONS, return 403
            return 403;
        }

        # Add CORS headers for non-OPTIONS requests if the origin is allowed.
        # Nginx won't add the header if $cors_origin is empty (origin not allowed).
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        # The following headers are added regardless, but are generally harmless if Origin wasn't allowed.
        # Alternatively, map these as well if stricter control is needed.
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
    }
}